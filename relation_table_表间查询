笛 卡 尔 积 结 果 表 :

      t1表                   t2表

t1的第 1 条数据        t2的第 1 条数据
t1的第 2 条数据        t2的第 1 条数据
t1的第 3 条数据        t2的第 1 条数据

t1的第 1 条数据        t2的第 2 条数据
t1的第 2 条数据        t2的第 2 条数据
t1的第 3 条数据        t2的第 2 条数据

t1的第 1 条数据        t2的第 3 条数据
t1的第 2 条数据        t2的第 3 条数据
t1的第 3 条数据        t2的第 3 条数据

笛卡尔积计算方法:

from t1 cross join t2;

笛卡尔积总结 : 左表的所有数据 分别和 右表的第一条数据结合,然后是左表所有和右表第二条.

表 连 接 使 用 思 路 : 

    写出笛卡尔积的一个小示例,然后逐步找关系



一. 关 系 表 :


    概 念 : 两个表或多个表之间数据单独存储,但是每个不同的数据之间还有一些关系.


    <1> 一 对 一 关 系 :

            A表 对应 B表. B表内 有 A表的主键. 

            不同的相关数据,存储在不同的表中,A表中的数据只对应一条B表中的数据.


    <2> 一 对 多 关 系 :

            一个对应多个表,多个表中存有 主表的 主键.
            (一个班 对应这个班的多个学生)

        多 对 一 :
            
            多个小的 对应一个总体的.(这个班的多个学生对应 这个班)


    <3> 多 对 多 关 系 :

            两大类之间,多个标签 和 多本书,一个标签对应多本书.

            两大阵营之间的 多个 对应 多个 的关系叫做多对多.

                一般将此关系写到 单的一个表中,自增id,书id,标签id.


    外 键 :

        A表中的主键 是B表中的一列数据,B表中的某列数据 是A表中的 主键.

        通过 A表的外键,就能与B表产生关联的关系.


    外 键 分 两 种 :

        物理外键(系统手段) : 指在建库建表时,直接指定表之间的关系.指定外键.

        一旦项目上了规模(并发)很容易造成死锁.

        逻辑外键(人工): 建表时不使用特殊的sql指令去指定外键.而是通过业务逻辑实现



二. 子 查 询 :


    概 念 : 

    把一个查询的结果在另一个查询中使用就叫作子查询.
    
    也叫嵌套查询,效率是三种表间查询最低的.


    A表 存了用户名, B表存了用户名和性别.

    通过 A表的 用户名,找到对应在 B表中的性别.

    逻 辑 : 我最终要查什么,条件是什么,在哪里查. 


    <1> 条件中的 子查询 :
    
        select sex from B表 where username = (select username from A表 where 
    
        username = 某名 )


    <2> 把子查询结果 写在 新表字段中 :
        
        select id,name,(select ...) from ...

        把子查询直接作为新表的一个字段.



三. 表 连 接 :

    
    原 理 : 导入两张表,得到结果为笛卡尔积,通过外键找到关联的部分

    语 法 : 
    
            <1> join 后还可跟 where 条件

            <2> on 语句找到2表关联的部分不分前后.

            <3> left join 补齐仅语句上左边的表.

            <4> right join 补齐仅语句上右边的表.


    <1> cross join    cross:交叉 
    
        将两表只做笛卡尔积,返回该结果

        语 法 : select t1.id,t2.id from t1 cross join t2;

        用t1中所有id数据分别对t2中所有id数据一一匹配.



三.1 内 连 接 : 
    
    
    指连接结果仅包含符合连接条件的行,参与连接的两个表都应符合连接条件.

    <1> inner join (可简写为 join,内连接)
    
        从cross join 的基础上得到符合条件的查询结果.

        内连接就是求两个表的交集,从交叉配对上选出满足 on子句条件的数据.

        语 法 : select t1.id,t2.id from t1 inner join t2 on t1.person.t2.person

        示 例 :

            join : (与where id=id 等价)

            select A.name,B.name,B.price 

            from A join B 
    
            on A.id = B.id #找到两表可以关联的部分


    <2> where 内连接

        示 例 :
    
            where : (与join等价)

            select A.name,B.name,B.price 

            from A,B
    
            where A.id = B.id #找到两表可以关联的部分



三.2 外 连 接 :


     连接结果不仅包含符合连接条件的行同时也包含自身不符合条件的行

     包括左外连接,右外连接,和全外连接.


    <1> left join (外连接,左连接)
    
        先把左表 select 的行数据查询出来,再查出on条件成立的数据

        语 法 : select t1.id,t2.id from t1 left join t2 on t1.person=t2.person;


    <2> right join (外连接,包含右边表的其他数据)

        先把右表 select 的行数据查询出来,再查出on条件成立的数据

        语 法 : select t1.id,t2.id from t1 right join t2 on t1.person=t2.person;


三.3 自 连 接 : 


     就是自己连接自己,必须起别名,区分两张表
    
     把 一张表 as 成两张表,进行 笛卡尔积 再根据条件查询 : 



三.4 多 表 连 接 :


     语 法 : from...join...on ... join...on...join...on...

     select order_num,prod_name,vend_name,prod_price,quantity
     from vendors as vs
     left join products as ps on vs.vend_id = ps.vend_id
     join orderitems as os on ps.prod_id=os.prod_id
     where order_num =20005;
